// <auto-generated />
using System;
using Com.Danliris.Service.Finance.Accounting.Lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Com.Danliris.Service.Finance.Accounting.Lib.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20200804165550_updateRealizationVbCurrency")]
    partial class updateRealizationVbCurrency
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.DownPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(64);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(64);

                    b.Property<bool>("Active");

                    b.Property<string>("BankName")
                        .HasMaxLength(64);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(64);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(512);

                    b.Property<string>("CategoryAcceptance")
                        .HasMaxLength(64);

                    b.Property<string>("CodeBankCurrency")
                        .HasMaxLength(64);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<DateTimeOffset>("DatePayment");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PaymentFor")
                        .HasMaxLength(64);

                    b.Property<string>("Remark");

                    b.Property<decimal>("TotalPayment");

                    b.HasKey("Id");

                    b.ToTable("DownPayments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.CreditorAccount.CreditorAccountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("BankExpenditureNoteDPP");

                    b.Property<DateTimeOffset?>("BankExpenditureNoteDate");

                    b.Property<int>("BankExpenditureNoteId");

                    b.Property<decimal>("BankExpenditureNoteMutation");

                    b.Property<string>("BankExpenditureNoteNo");

                    b.Property<decimal>("BankExpenditureNotePPN");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<decimal>("DPPCurrency");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<decimal>("FinalBalance");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<decimal>("MemoDPP");

                    b.Property<DateTimeOffset?>("MemoDate");

                    b.Property<decimal>("MemoMutation");

                    b.Property<string>("MemoNo");

                    b.Property<decimal>("MemoPPN");

                    b.Property<string>("PaymentDuration");

                    b.Property<string>("Products");

                    b.Property<string>("SupplierCode");

                    b.Property<bool>("SupplierIsImport");

                    b.Property<string>("SupplierName");

                    b.Property<decimal>("UnitReceiptMutation");

                    b.Property<decimal>("UnitReceiptNoteDPP");

                    b.Property<DateTimeOffset?>("UnitReceiptNoteDate");

                    b.Property<string>("UnitReceiptNoteNo");

                    b.Property<decimal>("UnitReceiptNotePPN");

                    b.HasKey("Id");

                    b.ToTable("CreditorAccounts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.DailyBankTransaction.BankTransactionMonthlyBalanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountBankId")
                        .HasMaxLength(50);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<double>("InitialBalance");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Month");

                    b.Property<double>("RemainingBalance");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("BankTransactionMonthlyBalances");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.DailyBankTransaction.DailyBankTransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBankAccountName")
                        .HasMaxLength(100);

                    b.Property<string>("AccountBankAccountNumber")
                        .HasMaxLength(100);

                    b.Property<string>("AccountBankCode")
                        .HasMaxLength(25);

                    b.Property<string>("AccountBankCurrencyCode")
                        .HasMaxLength(100);

                    b.Property<int>("AccountBankCurrencyId")
                        .HasMaxLength(50);

                    b.Property<string>("AccountBankCurrencySymbol")
                        .HasMaxLength(100);

                    b.Property<int>("AccountBankId");

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(100);

                    b.Property<bool>("Active");

                    b.Property<decimal>("AfterNominal");

                    b.Property<decimal>("BeforeNominal");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(25);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(150);

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DestinationBankAccountName")
                        .HasMaxLength(100);

                    b.Property<string>("DestinationBankAccountNumber")
                        .HasMaxLength(100);

                    b.Property<string>("DestinationBankCode")
                        .HasMaxLength(25);

                    b.Property<string>("DestinationBankCurrencyCode")
                        .HasMaxLength(100);

                    b.Property<int>("DestinationBankCurrencyId")
                        .HasMaxLength(50);

                    b.Property<string>("DestinationBankCurrencySymbol")
                        .HasMaxLength(100);

                    b.Property<int>("DestinationBankId");

                    b.Property<string>("DestinationBankName")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<decimal>("Nominal");

                    b.Property<string>("Receiver");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(50);

                    b.Property<string>("ReferenceType")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<string>("SourceType")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(100);

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DailyBankTransactions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("COAId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("JournalTransactionId");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.HasIndex("COAId");

                    b.HasIndex("JournalTransactionId");

                    b.ToTable("JournalTransactionItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsReversed");

                    b.Property<bool>("IsReverser");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(250);

                    b.Property<string>("Status")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("JournalTransactions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("Division");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Month");

                    b.Property<int>("Number");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("JournalTransactionNumbers");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.LockTransaction.LockTransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActiveStatus");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("LockDate");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("LockTransactions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.MasterCOA.COAModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CashAccount");

                    b.Property<string>("Code");

                    b.Property<string>("Code1");

                    b.Property<string>("Code2");

                    b.Property<string>("Code3");

                    b.Property<string>("Code4");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Header");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name");

                    b.Property<string>("Nature");

                    b.Property<string>("Path");

                    b.Property<string>("ReportType");

                    b.Property<string>("Subheader");

                    b.HasKey("Id");

                    b.ToTable("ChartsOfAccounts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.Memo.MemoItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<decimal>("Interest");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MemoId");

                    b.Property<decimal>("PaymentAmount");

                    b.HasKey("Id");

                    b.HasIndex("MemoId");

                    b.ToTable("MemoItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.Memo.MemoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(64);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(512);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MemoType")
                        .HasMaxLength(64);

                    b.Property<string>("Remark");

                    b.Property<int>("SalesInvoiceId");

                    b.Property<string>("SalesInvoiceNo")
                        .HasMaxLength(64);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Memos");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.OthersExpenditureProofDocument.OthersExpenditureProofDocumentItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("COAId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<decimal>("Debit");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("OthersExpenditureProofDocumentId");

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.ToTable("OthersExpenditureProofDocumentItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.OthersExpenditureProofDocument.OthersExpenditureProofDocumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountBankId");

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(32);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.Property<string>("Type")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("OthersExpenditureProofDocuments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("EPOId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PaymentDispositionNoteItemId");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<int>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<int>("PurchasingDispositionDetailId");

                    b.Property<int>("PurchasingDispositionExpeditionItemId");

                    b.Property<double>("Quantity");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<int>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("PaymentDispositionNoteItemId");

                    b.ToTable("PaymentDispositionNoteDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<int>("CategoryId");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("DPP");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DispositionDate");

                    b.Property<int>("DispositionId");

                    b.Property<string>("DispositionNo")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(500);

                    b.Property<double>("IncomeTaxValue");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("PayToSupplier");

                    b.Property<int>("PaymentDispositionNoteId");

                    b.Property<DateTimeOffset>("PaymentDueDate");

                    b.Property<string>("ProformaNo")
                        .HasMaxLength(255);

                    b.Property<int>("PurchasingDispositionExpeditionId");

                    b.Property<double>("TotalPaid");

                    b.Property<double>("VatValue");

                    b.HasKey("Id");

                    b.HasIndex("PaymentDispositionNoteId");

                    b.ToTable("PaymentDispositionNoteItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Amount");

                    b.Property<string>("BGCheckNumber")
                        .HasMaxLength(255);

                    b.Property<string>("BankAccountCOA");

                    b.Property<string>("BankAccountName")
                        .HasMaxLength(1000);

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(255);

                    b.Property<string>("BankCode")
                        .HasMaxLength(255);

                    b.Property<string>("BankCurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("BankCurrencyId");

                    b.Property<double>("BankCurrencyRate");

                    b.Property<int>("BankId");

                    b.Property<string>("BankName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("PaymentDate");

                    b.Property<string>("PaymentDispositionNo")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<int>("SupplierId");

                    b.Property<bool>("SupplierImport");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("TransactionType")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("PaymentDispositionNotes");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingDispositionExpedition.PurchasingDispositionExpeditionItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("EPOId");

                    b.Property<string>("EPONo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(50);

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<int>("PurchasingDispositionDetailId");

                    b.Property<int>("PurchasingDispositionExpeditionId");

                    b.Property<double>("Quantity");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(50);

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<string>("UomId");

                    b.Property<string>("UomUnit");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingDispositionExpeditionId");

                    b.ToTable("PurchasingDispositionExpeditionItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingDispositionExpedition.PurchasingDispositionExpeditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset?>("BankExpenditureNoteDate");

                    b.Property<string>("BankExpenditureNoteNo");

                    b.Property<DateTimeOffset?>("BankExpenditureNotePPHDate");

                    b.Property<string>("BankExpenditureNotePPHNo");

                    b.Property<string>("CashierDivisionBy");

                    b.Property<DateTimeOffset?>("CashierDivisionDate");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("CurrencyId")
                        .HasMaxLength(50);

                    b.Property<double>("DPP");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DispositionDate");

                    b.Property<string>("DispositionId");

                    b.Property<string>("DispositionNo");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<double>("IncomeTaxValue");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<bool>("IsPaidPPH");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NotVerifiedReason");

                    b.Property<double>("PayToSupplier");

                    b.Property<DateTimeOffset>("PaymentDueDate");

                    b.Property<string>("PaymentMethod");

                    b.Property<int>("Position");

                    b.Property<string>("ProformaNo");

                    b.Property<string>("SendToCashierDivisionBy");

                    b.Property<DateTimeOffset?>("SendToCashierDivisionDate");

                    b.Property<string>("SendToPurchasingDivisionBy");

                    b.Property<DateTimeOffset?>("SendToPurchasingDivisionDate");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<double>("TotalPaid");

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.Property<double>("VatValue");

                    b.Property<string>("VerificationDivisionBy");

                    b.Property<DateTimeOffset?>("VerificationDivisionDate");

                    b.Property<DateTimeOffset?>("VerifyDate");

                    b.HasKey("Id");

                    b.ToTable("PurchasingDispositionExpeditions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.SalesReceipt.SalesReceiptDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaidOff");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Nominal");

                    b.Property<double>("OverPaid");

                    b.Property<double>("Paid");

                    b.Property<int>("SalesInvoiceId");

                    b.Property<string>("SalesInvoiceNo")
                        .HasMaxLength(255);

                    b.Property<int>("SalesReceiptId");

                    b.Property<double>("Tempo");

                    b.Property<double>("TotalPaid");

                    b.Property<double>("TotalPayment");

                    b.Property<double>("Unpaid");

                    b.Property<string>("VatType")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("SalesReceiptId");

                    b.ToTable("SalesReceiptDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.SalesReceipt.SalesReceiptModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(255);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<double>("AdministrationFee");

                    b.Property<long>("AutoIncreament");

                    b.Property<string>("BankCode")
                        .HasMaxLength(255);

                    b.Property<int>("BankId");

                    b.Property<string>("BankName")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerAddress")
                        .HasMaxLength(1000);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("OriginAccountNumber")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("SalesReceiptDate");

                    b.Property<string>("SalesReceiptNo")
                        .HasMaxLength(255);

                    b.Property<double>("TotalPaid");

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("SalesReceipts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VbNonPORequest.VbRequestDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Conversion");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<decimal>("DealQuantity");

                    b.Property<string>("DealUOMId")
                        .HasMaxLength(64);

                    b.Property<string>("DealUOMUnit")
                        .HasMaxLength(64);

                    b.Property<decimal>("DefaultQuantity");

                    b.Property<string>("DefaultUOMId")
                        .HasMaxLength(64);

                    b.Property<string>("DefaultUOMUnit")
                        .HasMaxLength(64);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DetailOthers")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsUseVat");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("POId");

                    b.Property<string>("PONo")
                        .HasMaxLength(64);

                    b.Property<decimal>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(64);

                    b.Property<string>("ProductId")
                        .HasMaxLength(64);

                    b.Property<string>("ProductName")
                        .HasMaxLength(64);

                    b.Property<string>("ProductRemark")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.Property<int>("VBId");

                    b.Property<string>("VBNo")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("VBId");

                    b.ToTable("VbRequestsDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VBRealizationDocumentExpedition.VBRealizationDocumentExpeditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CashierReceiptBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("CashierReceiptDate");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NotVerifiedBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("NotVerifiedDate");

                    b.Property<string>("NotVerifiedReason");

                    b.Property<int>("Position");

                    b.Property<string>("SendToVerificationBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("SendToVerificationDate");

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.Property<decimal>("VBAmount");

                    b.Property<int>("VBId");

                    b.Property<string>("VBNo")
                        .HasMaxLength(64);

                    b.Property<decimal>("VBRealizationAmount");

                    b.Property<DateTimeOffset>("VBRealizationDate");

                    b.Property<int>("VBRealizationId");

                    b.Property<string>("VBRealizationNo")
                        .HasMaxLength(64);

                    b.Property<string>("VBRequestName")
                        .HasMaxLength(256);

                    b.Property<string>("VerificationReceiptBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("VerificationReceiptDate");

                    b.Property<string>("VerifiedToCashierBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("VerifiedToCashierDate");

                    b.HasKey("Id");

                    b.ToTable("VBRealizationDocumentExpeditions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.RealizationVbDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("AmountNonPO");

                    b.Property<string>("CodeProductSPB")
                        .HasMaxLength(64);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<string>("CurrencyId")
                        .HasMaxLength(64);

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("DateNonPO");

                    b.Property<DateTimeOffset?>("DateSPB");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionSPB")
                        .HasMaxLength(64);

                    b.Property<string>("IdProductSPB")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NameProductSPB")
                        .HasMaxLength(64);

                    b.Property<string>("NoPOSPB")
                        .HasMaxLength(64);

                    b.Property<string>("NoSPB")
                        .HasMaxLength(64);

                    b.Property<decimal>("PriceTotalSPB");

                    b.Property<string>("Remark")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(64);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(64);

                    b.Property<int>("VBRealizationId");

                    b.Property<bool>("isGetPPn");

                    b.HasKey("Id");

                    b.HasIndex("VBRealizationId");

                    b.ToTable("RealizationVbDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.RealizationVbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount");

                    b.Property<decimal>("AmountNonPO");

                    b.Property<decimal>("Amount_VB");

                    b.Property<DateTimeOffset>("CloseDate");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<string>("CurrencyDescription")
                        .HasMaxLength(64);

                    b.Property<decimal>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("Date");

                    b.Property<DateTimeOffset>("DateEstimate");

                    b.Property<DateTimeOffset>("DateVB");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<decimal>("DifferenceReqReal");

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Position");

                    b.Property<string>("Reason_NotVerified")
                        .HasMaxLength(255);

                    b.Property<string>("RequestVbName")
                        .HasMaxLength(64);

                    b.Property<string>("StatusReqReal")
                        .HasMaxLength(64);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitLoad")
                        .HasMaxLength(64);

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.Property<string>("UsageVBRequest")
                        .HasMaxLength(255);

                    b.Property<int>("VBId");

                    b.Property<string>("VBNo")
                        .HasMaxLength(64);

                    b.Property<string>("VBNoRealize")
                        .HasMaxLength(64);

                    b.Property<string>("VBRealizeCategory")
                        .HasMaxLength(64);

                    b.Property<decimal>("VatAmount");

                    b.Property<DateTimeOffset>("VerifiedDate");

                    b.Property<string>("VerifiedName")
                        .HasMaxLength(255);

                    b.Property<bool>("isClosed");

                    b.Property<bool>("isNotVeridied");

                    b.Property<bool>("isVerified");

                    b.HasKey("Id");

                    b.ToTable("RealizationVbs");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.VbRequestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount");

                    b.Property<bool>("Apporve_Status");

                    b.Property<DateTimeOffset?>("ApproveDate");

                    b.Property<DateTimeOffset?>("CompleteDate");

                    b.Property<bool>("Complete_Status");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<string>("CurrencyDescription")
                        .HasMaxLength(64);

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("Date");

                    b.Property<DateTimeOffset>("DateEstimate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("IncomeTaxBy")
                        .HasMaxLength(64);

                    b.Property<string>("IncomeTaxId")
                        .HasMaxLength(64);

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(64);

                    b.Property<string>("IncomeTaxRate")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<bool>("Realization_Status");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("UnitDivisionId");

                    b.Property<string>("UnitDivisionName")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitLoad")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.Property<string>("Usage")
                        .HasMaxLength(255);

                    b.Property<string>("Usage_Input")
                        .HasMaxLength(255);

                    b.Property<decimal>("VBMoney");

                    b.Property<string>("VBNo")
                        .HasMaxLength(64);

                    b.Property<string>("VBRequestCategory")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("VbRequests");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.MasterCOA.COAModel", "COA")
                        .WithMany()
                        .HasForeignKey("COAId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionModel", "JournalTransaction")
                        .WithMany("Items")
                        .HasForeignKey("JournalTransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.Memo.MemoItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.Memo.MemoModel", "Memo")
                        .WithMany("Items")
                        .HasForeignKey("MemoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteItemModel", "PaymentDispositionNoteItem")
                        .WithMany("Details")
                        .HasForeignKey("PaymentDispositionNoteItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteModel", "PaymentDispositionNote")
                        .WithMany("Items")
                        .HasForeignKey("PaymentDispositionNoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingDispositionExpedition.PurchasingDispositionExpeditionItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingDispositionExpedition.PurchasingDispositionExpeditionModel", "PurchasingDispositionExpedition")
                        .WithMany("Items")
                        .HasForeignKey("PurchasingDispositionExpeditionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.SalesReceipt.SalesReceiptDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.SalesReceipt.SalesReceiptModel", "SalesReceiptModel")
                        .WithMany("SalesReceiptDetails")
                        .HasForeignKey("SalesReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VbNonPORequest.VbRequestDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.VbRequestModel", "VbRequestDetail")
                        .WithMany("VbRequestDetail")
                        .HasForeignKey("VBId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.RealizationVbDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.RealizationVbModel", "RealizationVbDetail")
                        .WithMany("RealizationVbDetail")
                        .HasForeignKey("VBRealizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
